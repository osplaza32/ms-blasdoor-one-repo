// Code generated by protoc-gen-go. DO NOT EDIT.
// source: management/permissions/time/v1/timeservice_api.proto

package timev1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EchoRequest struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc75f1f9bc0df5c, []int{0}
}

func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (m *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(m, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EchoResponse struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8dc75f1f9bc0df5c, []int{1}
}

func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (m *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(m, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "management.permissions.time.v1.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "management.permissions.time.v1.EchoResponse")
}

func init() {
	proto.RegisterFile("management/permissions/time/v1/timeservice_api.proto", fileDescriptor_8dc75f1f9bc0df5c)
}

var fileDescriptor_8dc75f1f9bc0df5c = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0xc9, 0x4d, 0xcc, 0x4b,
	0x4c, 0x4f, 0xcd, 0x4d, 0xcd, 0x2b, 0xd1, 0x2f, 0x48, 0x2d, 0xca, 0xcd, 0x2c, 0x2e, 0xce, 0xcc,
	0xcf, 0x2b, 0xd6, 0x2f, 0xc9, 0xcc, 0x4d, 0xd5, 0x2f, 0x33, 0x04, 0xd3, 0xc5, 0xa9, 0x45, 0x65,
	0x99, 0xc9, 0xa9, 0xf1, 0x89, 0x05, 0x99, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x72, 0x08,
	0x5d, 0x7a, 0x48, 0xba, 0xf4, 0x40, 0xaa, 0xf5, 0xca, 0x0c, 0xa5, 0x64, 0xd2, 0xf3, 0xf3, 0xd3,
	0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b, 0xc0, 0xf2,
	0x60, 0xdd, 0x4a, 0xca, 0x5c, 0xdc, 0xae, 0xc9, 0x19, 0xf9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x10, 0x8e, 0x92, 0x0a, 0x17, 0x0f, 0x44, 0x51, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x76,
	0x55, 0x46, 0x13, 0x18, 0xb9, 0xf8, 0x42, 0x10, 0x4e, 0x74, 0x0c, 0xf0, 0x14, 0xaa, 0xe3, 0x62,
	0x01, 0x69, 0x14, 0xd2, 0xd6, 0xc3, 0xef, 0x48, 0x3d, 0x24, 0x37, 0x48, 0xe9, 0x10, 0xa7, 0x18,
	0xe2, 0x16, 0x25, 0xe9, 0xa6, 0xcb, 0x4f, 0x26, 0x33, 0x89, 0x2a, 0x09, 0x80, 0x42, 0x28, 0xb5,
	0x22, 0x31, 0xb7, 0x20, 0x27, 0x55, 0x3f, 0x35, 0x39, 0x23, 0xdf, 0x8a, 0x51, 0xcb, 0xa9, 0x9b,
	0x91, 0x4b, 0x29, 0x39, 0x3f, 0x97, 0x80, 0x81, 0x4e, 0xc2, 0xc8, 0xce, 0x2e, 0xc8, 0x0c, 0x00,
	0x85, 0x4c, 0x00, 0x63, 0x14, 0x1b, 0x48, 0xbe, 0xcc, 0x70, 0x11, 0x13, 0xb3, 0x6f, 0x40, 0xc8,
	0x2a, 0x26, 0x39, 0x5f, 0x84, 0x29, 0x01, 0x48, 0xa6, 0x80, 0x34, 0xeb, 0x85, 0x19, 0x9e, 0x42,
	0x56, 0x10, 0x83, 0xa4, 0x20, 0x06, 0xa4, 0x20, 0x26, 0xcc, 0x30, 0x89, 0x0d, 0x1c, 0xe4, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xad, 0x22, 0x3c, 0x4e, 0xe8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TimeserviceAPIClient is the client API for TimeserviceAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimeserviceAPIClient interface {
	//Doc.
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
}

type timeserviceAPIClient struct {
	cc *grpc.ClientConn
}

func NewTimeserviceAPIClient(cc *grpc.ClientConn) TimeserviceAPIClient {
	return &timeserviceAPIClient{cc}
}

func (c *timeserviceAPIClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/management.permissions.time.v1.TimeserviceAPI/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimeserviceAPIServer is the server API for TimeserviceAPI service.
type TimeserviceAPIServer interface {
	//Doc.
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
}

// UnimplementedTimeserviceAPIServer can be embedded to have forward compatible implementations.
type UnimplementedTimeserviceAPIServer struct {
}

func (*UnimplementedTimeserviceAPIServer) Echo(ctx context.Context, req *EchoRequest) (*EchoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}

func RegisterTimeserviceAPIServer(s *grpc.Server, srv TimeserviceAPIServer) {
	s.RegisterService(&_TimeserviceAPI_serviceDesc, srv)
}

func _TimeserviceAPI_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimeserviceAPIServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/management.permissions.time.v1.TimeserviceAPI/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimeserviceAPIServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimeserviceAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "management.permissions.time.v1.TimeserviceAPI",
	HandlerType: (*TimeserviceAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _TimeserviceAPI_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "management/permissions/time/v1/timeservice_api.proto",
}
