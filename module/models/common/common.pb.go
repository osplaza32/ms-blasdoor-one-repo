// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/common.proto

package Blassdoor_common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Algo.
type Companyinfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Presidents           string   `protobuf:"bytes,2,opt,name=presidents,proto3" json:"presidents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Companyinfo) Reset()         { *m = Companyinfo{} }
func (m *Companyinfo) String() string { return proto.CompactTextString(m) }
func (*Companyinfo) ProtoMessage()    {}
func (*Companyinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f954d82c0b891f6, []int{0}
}

func (m *Companyinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Companyinfo.Unmarshal(m, b)
}
func (m *Companyinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Companyinfo.Marshal(b, m, deterministic)
}
func (m *Companyinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Companyinfo.Merge(m, src)
}
func (m *Companyinfo) XXX_Size() int {
	return xxx_messageInfo_Companyinfo.Size(m)
}
func (m *Companyinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Companyinfo.DiscardUnknown(m)
}

var xxx_messageInfo_Companyinfo proto.InternalMessageInfo

func (m *Companyinfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Companyinfo) GetPresidents() string {
	if m != nil {
		return m.Presidents
	}
	return ""
}

type Ocupation struct {
	Rubro                string   `protobuf:"bytes,1,opt,name=rubro,proto3" json:"rubro,omitempty"`
	Workers              int32    `protobuf:"varint,2,opt,name=workers,proto3" json:"workers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ocupation) Reset()         { *m = Ocupation{} }
func (m *Ocupation) String() string { return proto.CompactTextString(m) }
func (*Ocupation) ProtoMessage()    {}
func (*Ocupation) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f954d82c0b891f6, []int{1}
}

func (m *Ocupation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ocupation.Unmarshal(m, b)
}
func (m *Ocupation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ocupation.Marshal(b, m, deterministic)
}
func (m *Ocupation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ocupation.Merge(m, src)
}
func (m *Ocupation) XXX_Size() int {
	return xxx_messageInfo_Ocupation.Size(m)
}
func (m *Ocupation) XXX_DiscardUnknown() {
	xxx_messageInfo_Ocupation.DiscardUnknown(m)
}

var xxx_messageInfo_Ocupation proto.InternalMessageInfo

func (m *Ocupation) GetRubro() string {
	if m != nil {
		return m.Rubro
	}
	return ""
}

func (m *Ocupation) GetWorkers() int32 {
	if m != nil {
		return m.Workers
	}
	return 0
}

func init() {
	proto.RegisterType((*Companyinfo)(nil), "Blassdoor.common.Companyinfo")
	proto.RegisterType((*Ocupation)(nil), "Blassdoor.common.Ocupation")
}

func init() { proto.RegisterFile("common/common.proto", fileDescriptor_8f954d82c0b891f6) }

var fileDescriptor_8f954d82c0b891f6 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x87, 0x50, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x02, 0x4e, 0x39, 0x89,
	0xc5, 0xc5, 0x29, 0xf9, 0xf9, 0x45, 0x7a, 0x10, 0x71, 0x25, 0x47, 0x2e, 0x6e, 0xe7, 0xfc, 0xdc,
	0x82, 0xc4, 0xbc, 0xca, 0xcc, 0xbc, 0xb4, 0x7c, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x8e, 0x8b, 0xab, 0xa0, 0x28, 0xb5,
	0x38, 0x33, 0x25, 0x35, 0xaf, 0xa4, 0x58, 0x82, 0x09, 0x2c, 0x83, 0x24, 0xa2, 0x64, 0xcd, 0xc5,
	0xe9, 0x9f, 0x5c, 0x5a, 0x90, 0x58, 0x92, 0x99, 0x9f, 0x27, 0x24, 0xc2, 0xc5, 0x5a, 0x54, 0x9a,
	0x54, 0x94, 0x0f, 0x35, 0x01, 0xc2, 0x11, 0x92, 0xe0, 0x62, 0x2f, 0xcf, 0x2f, 0xca, 0x4e, 0x2d,
	0x82, 0xe8, 0x67, 0x0d, 0x82, 0x71, 0x93, 0xd8, 0xc0, 0x0e, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xaa, 0xa0, 0xd9, 0x2e, 0xaf, 0x00, 0x00, 0x00,
}
